Proxy Pattern ("Controlling Object Access") Definition:
The Proxy Pattern provides a surrogate or
placeholder for another object to control access to it.


Proxies are used to control and manage access.

A remote proxy acts as a local representative to a remote object.

Use the Proxy Pattern to create a representative object
that controls access to another object,
which may be remote, expensive to create or
in need of securing.

Few ways proxies control access:
1. As we know, a remote proxy controls access to a remote object.
2. A virtual proxy controls access to a resource that is expensive to create.
3. A protection proxy controls access to a resource based on access rights

A caching proxy maintains a cache of previous created
objects and when a request is made it returns cached object, if possible.

Proxy is structurally similar to
Decorator, but the two differ in
their purpose.
The Decorator Pattern adds
behavior to an object, while a
Proxy controls access

Q. What’s a “remote object?”
A. It’s an object that lives in the heap of a different Java Virtual Machine
   (or more generally, a remote object that is running in a different address space).

Q. What’s a “local representative?”
A. It’s an object that you can call local methods on
   and have them forwarded on to the remote object.

Q. How does the Java Remote Method Invocation (RMI) help?

A. RMI gives us a way to find objects in a remote JVM and allows us to invoke their
   methods.

Q. How do method calls in RMI happen?

A. 1. Client object calls required method on the client helper object
   2. Client helper packages up information about the call
      and ships it over the network to the service helper.
   3. Service helper unpacks the information from the client helper,
      finds out which method to call (and on which object) and
      invokes the real method on the real service object.
   4. The method is invoked on the service object, which returns
      some result to the service helper
   5. Service helper packages up information returned from the
      call and ships it back over the network to the client helper.
   6. Client helper un-packages the returned values and returns
      them to the client object. To the client object, this was all
      transparent.

Q. What is a Virtual Proxy?

A. Virtual Proxy acts as a representative for an object that may be expensive to create.
   The Virtual Proxy often defers the creation of the object until it
   is needed; the Virtual Proxy also acts as a surrogate for the object before and while it
   is being created. After that, the proxy delegates requests directly to the RealSubject.

Q. What is the difference between Adapter & Proxy pattern? - they seem similar

A. Adapter changes the interface of the objects it adapts, while the Proxy implements the same interface.

Q. What is a Protetiction Proxy?

A. A proxy that controls access to an object based on access rights.

### Note: When you extend UnicastRemoteObject for Remote implementation, make sure to create a no-arg constructor which throws RemoteException.
          This is because UnicastRemoteObject's constructor does so.